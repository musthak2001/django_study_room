 python -m venv myenv
.\myenv\Scripts\activate
pip install django
django-admin startproject study_room
cd study_room
python manage.py runserver


project ->
urls.py
delete comments



python manage.py startapp base <- create app

in  study_room(project) settings.py
inside installed apps 
'base(app).apps.BaseConfig',

in project ,urls.py 
from django.http import HttpResponse


create urls.py in app
add 
from django.urls import path
from . import views 


urlpatterns = [
   
    path('', views.home,name="home"),  # Empty path for root URL, calls home function
]

in views.py
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.
def home(request):
    return HttpResponse("Welcome ")



in project urls.py 
add this 
from django.urls import path,include

urlpatterns = [
    path('admin/', admin.site.urls),  # Admin URL (unchanged)
    path("",include('base.urls'))----this line
    
]


create new floder called templates in my project
create html in templates

go to project ->settings.py
in TEMPLATES ->
"DIRS": [
            BASE_DIR / 'templates'
            ],


go to views.py in app
# Create your views here.
def home(request):
    return render(request,"home.html") <-- modify like this


create te navbar in templates
navbar.html


lets include this navbar into all pages
{% include 'navbar.html' %} 

in templates
create main.html
in main.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page</title>
</head>
<body>

    {% include 'navbar.html' %} <<<<-----
    
    {% block content %}
    {% endblock %} 
</body>
</html>
remove the include from the other html pages


in html pages
{% extends "main.html" %}

{% block content %}
<h1>home template </h1>
<p>abcdefghijklmnopqrstuvwxyz</p>

{% endblock content %}


//////PS C:\Users\Administrator\Desktop\current django\study_room> 


##DATABASE
(myenv) (base) PS C:\Users\Administrator\Desktop\current django\study_room> python manage.py migrate
------------------------------------------------------------------
go to app -> then views.py
This means Django will create a database table named Room
with columns: name, description, updated, and created.
from django.db import models

class Room(models.Model):
    name = models.CharField(max_length=200)
    description = models.TextField(null=True, blank=True)
    updated = models.DateTimeField(auto_now=True)
    created = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.name

(myenv) (base) PS C:\Users\Administrator\Desktop\current django\study_room> python manage.py makemigrations
(myenv) (base) PS C:\Users\Administrator\Desktop\current django\study_room> python manage.py migrate


superuser
(myenv) (base) PS C:\Users\Administrator\Desktop\current django\study_room> python manage.py createsuperuser


##go to admin.py in app.
This registers the Room model with the Django Admin Panel.
from .models import Room
admin.site.register(Room)

edit in admin


##go to views.py
from .models import Room

from django.shortcuts import render
from .models import Room

def home(request):
    rooms = Room.objects.all()
    context = {'rooms': rooms}
    return render(request, "home.html", context)

It gets all Room records from the database:

home.html
{% for room in rooms %}
  <h3>{{ room.name }}</h3>
{% endfor %}





url to get by id
views.py
def room(request,pk):
    rooms = Room.objects.get(id=pk)
    return render(request,"room.html")

urls.py
    path('room/<int:pk>/', views.room, name="room"),


##create more models -tables
import inbuild User models,set foreignkeys and everything
from django.contrib.auth.models import User

class Topic(models.Model):
class Message(models.Model):


ex:
host = models.ForeignKey(User, on_delete=models.SET_NULL,null=True)
topic = models.ForeignKey(Topic, on_delete=models.SET_NULL,null=True)

add this to admin.py
from .models import Room,Message,Topic

admin.site.register(Message)
admin.site.register(Topic)



